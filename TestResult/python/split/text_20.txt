 Hacker News new | threads | past | comments | ask | show | jobs | submit epirogov (16) | logout Ask HN: Software
 architects – what’s your typical day look like? 198 points by jarl-ragnar 19 hours ago | hide | past | favorite | 95 comments
A question for anyone out there working as a software architect (especially microservice architectures). What’s your
 typical day comprise of? Where do you find yourself focusing your time? What resources have you found to be most
 useful?

 azalex 17 hours ago | next [–]

 The essence of my job as an architect is commonly described as a 'professional negotiator', implying that my primary
 responsibility is convincing people into doing the right thing (tm). My time is typically split between two main things:
 meetings and research/design work. On a typical day, I have 4-6 meetings with different groups of people. Some will be
 solution design discussions with engineering teams where we try to figure out how a particular challenge will be solved
 together. Others will be with product managers, talking about feasibility, cost and time estimation. Yet others will be with
 senior directors about long term strategy and infrastructure. Finally, a very important part of the meetings is mentoring.
 Knowing something is valuable, sharing that knowledge is invaluable.

 While this may sound like a lot of meetings (and engineers typically abhor meetings) they are typically very useful and
 very rewarding.

 The remaining time I typically spend on doing preliminary research, design, documentation and every now and then even
 coding, which I thoroughly enjoy.

 reply

 rcarmo 3 minutes ago | parent | next [–]

 This. This is the “right” answer. reply

 azangru 17 hours ago | parent | prev | next [–]

      convincing people into doing the right thing (tm). How do you deal with the burden of knowing/predicting
      what the right thing (tm) is / will turn out to be? I am constantly agonising over choices I'm about to make,
      and almost invariably come to regret some of the choices that I, or our team, have made (which include, but
      are not limited to, React, Gatsby, Flow, Stylus, Enzyme, Jest, SCSS, single-page app architecture, possibly
      graphql, etc. etc...). Not that I'm an architect; but still. How do you cope?

 reply

 azalex 16 hours ago | root | parent | next [–]

 In my opinion, the fundamental difference between an architect and a staff/principal engineer is that architects are more
 generalists and principal engineers are more specialised. It does not mean, of course, that architects don't or can't have
 deep knowledge of specific areas or that principals can't have a wide understanding of their ecosystems, but an architect
 absolutely must understand the ecosystem they work in and a principal engineer absolutely must understand the specific
 technology stack of their choice. Understanding that every choice is a trade-off and comes at a price, that someone at
 some point will have to pay. You chose the latest and greatest web framework? Great! How many developers at your
 company will know how to use it? How long will it take for them to learn it? How big is the talent pool you can hire
 from? How much time will it take to migrate your products to it? Who will support it, is it "wild west" open-source or
 does it come with commercial support? How does it fit with your deployment model? Has it gone through rigorous threat
 modelling? There are about a billion factors that may affect your choices and finding the right solution will always be a
 central part of the problem.

To actually answer your question about how I deal with this, this is why I do research. Let's say our product people come
 up with a brilliant new product idea that we don't have an existing solution for, then I'll spend some time on finding
 information about the available options and take notes on the benefits and drawbacks. I will try to find people who are
 experts in the subject and get their opinions.

 What I can not do, is to actually go and gain a deep understanding of every single language/platform/framework/library
 there is, I'm just a human after all.

 reply