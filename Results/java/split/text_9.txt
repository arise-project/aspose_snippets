Definitely nothing against what Lexx said. I did want to call out that most architects over-complicate in my experience.
What we do just isn't as profound as people make it out to be unless you are genuinely working on some latest ML for
billions of revenue or stabilizing SpaceX's landing thrusters, sequencing DNA, etc. reply

SgtBastard 11 hours ago | root | parent | next [–]

Having a broad and deep understanding of a range of design patterns in an otherwise banal enterprise environment is
critical when the existing technologies you work with are numerous, decades old and have built up like layers of
sedimentary rock.

     in my experience

Friend, you're making it clear that you don't have much.

reply

doctor_eval 12 hours ago | root | parent | prev | next [–]

     90% of the job is NOT overcomplicating. I totally agree with this, but

     Most patterns like CQRS, DDD, fully event-driven etc are complete overkill and a sign of a BAD architect
     unless there is a real cause for it.

Once your application gets to a certain size, DDD, CQRS, and events will make your life far simpler.

Avoiding these patterns is a bit like saying that the solution to moving a piano is to get a bigger bicycle.

reply

lexx 17 hours ago | root | parent | prev | next [–]

Apart from those best seller books, the are great podcasts and articles that people discuss their experiences in depth. It
helps me a lot, to compose a more holistic thinking. Technical debt does not increase only for technological reasons but
also from business expectations. You can't just "build" a new garden and leave it be. You have to maintain it also.
Keeping the system clean and well oiled before building more is important. But these concepts need to be reminded
everyday to survive

reply

nateee 16 hours ago | root | parent | next [–]

Can you list some recommendations? For podcasts and some articles/authors to follow. reply

lexx 14 hours ago | root | parent | next [–]

Here are some of my current material:

   • I have a great time listening to "Software Unscripted" podcast.

   • On youtube the channel "code opinion". Although I don't like or use DDD and C#, I think that it has high quality
     and rewarding content.

   • I am currently finishing "A Philosophy of Software Design" by John Ousterhout.